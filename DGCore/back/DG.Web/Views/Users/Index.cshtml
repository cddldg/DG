@{
    ViewBag.Title = "用户";
}
<script type="text/html" id="addusers" lay-filter="myfilter">
    <div class="layui-btn-group">
        <a class="layui-btn" href="javascript:;" lay-event="add">
            <i class="layui-icon">&#xe654;</i> 添加
        </a>
    </div>
</script>
<div id="view"></div>

<table id="mytable" class="layui-table" lay-filter="myfilter"></table>
<script type="text/html" id="mybar">
    <div class="layui-btn-group">
        <button class="layui-btn layui-btn-small" lay-event="detail">
            <i class="layui-icon">&#xe60a;</i>
        </button>
        <button class="layui-btn layui-btn-small" lay-event="edit">
            <i class="layui-icon">&#xe642;</i>
        </button>
        <button class="layui-btn layui-btn-small layui-btn-danger" lay-event="del">
            <i class="layui-icon">&#xe640;</i>
        </button>
    </div>
</script>
@section Scripts{
    <script>
        layui.use(['token', 'layer', 'table', 'element', 'laytpl'], function () {
            var laytpl = layui.laytpl;
            var layer = layui.layer //弹层
            var table = layui.table //表格
            var element = layui.element; //元素操作
            var token = layui.token;
            var $ = layui.jquery;
            /*执行渲染*/
            var utable = table.render({
                elem: '#mytable',
                url: '/api/Users/GetPager',
                token: token.gettoken(),//记得升级要修改table.js源码ajax加 headers: { Authorization: n.token || "Bearer " }
                method: 'get',
                request: {
                    pageName: 'pageIndex', //页码的参数名称，默认：page
                    limitName: 'pageSize' //每页数据量的参数名，默认：limit
                },
                response: {
                    statusName: 'IsError' //数据状态的字段名称，默认：code
                    , statusCode: 0 //成功的状态码，默认：0
                    , msgName: 'ErrorMessage' //状态信息的字段名称，默认：msg
                    , countName: 'Count' //数据总数的字段名称，默认：count
                    , dataName: 'Data' //数据列表的字段名称，默认：data
                },
                //where: {
                //    //Authorization: "Bearer jjtoken"
                //},
                height: 'full-50',
                even: true,
                initSort: {
                    field: 'UserName', //排序字段，对应 cols 设定的各字段名
                    type: 'asc' //排序方式  asc: 升序、desc: 降序、null: 默认排序
                },
                page: true,
                loading: true,
                limits: [5, 10, 15, 20, 25, 50, 100, 300, 1000],
                limit: 15,
                id: 'datatable',
                cols: [[
                    { checkbox: true },
                    { field: 'ID', title: 'ID', width: 200 },
                    { field: 'UserName', title: '用户名', width: 150, sort: true },
                    { field: 'Gender', title: '性别', width: 100 },
                    { field: 'Mobile', title: '手机号码', width: 120 },
                    { field: 'Birthday', title: '生日', width: 200 },
                    { field: 'CreateTime', title: '创建时间', width: 200 },
                    { field: 'UpdateTime', title: '最后更新时间', width: 200 },
                    { field: 'IsDeleted', title: '是否删除', width: 100 },
                    { field: 'IntervalTime', title: '时间状态', width: 100 },
                    { fixed: 'right', title: '操作', width: 200, align: 'center', toolbar: '#mybar' } //这里的toolbar值是模板元素的选择器
                ]]
            });

            //触发事件
            var active = {
                add: function (obj) {
                    var index = layer.load(1, { shade: [0.1, '#fff'] /*0.1透明度的白色背景*/ });
                    $.ajax({
                        url: '/api/Users/Add',
                        type: 'POST',
                        beforeSend: function (request) {
                            request.setRequestHeader("Authorization", token.gettoken());
                        },
                        data: { Password: "111111" },
                        success: function (res) {
                            layer.close(index);
                            if (res) {
                                if (res.IsError == 0) {
                                    layer.msg("添加成功：" + res.Data.UserName);
                                    utable.reload();
                                } else {
                                    layer.msg("添加失败:" + res.ErrorMessage);
                                }
                            }
                        },
                        error: function (res) {
                            layer.close(index);
                            if(res.status==401){
                                layer.msg("权限不足，添加失败。");
                            } else {
                                layer.msg("添加失败");
                            }
                            
                         },
                        complete: function (XHR, TS) {
                            layer.close(index);
                         }
                    });
                },
                del: function (obj) {
                    layer.confirm('真的删除行么:' + obj.data.UserName, function (indexd) {
                        //obj.del(); //删除对应行（tr）的DOM结构
                        var index = layer.load(1, { shade: [0.1, '#fff'] /*0.1透明度的白色背景*/ });
                        $.ajax({
                            url: '/api/Users/Del',
                            type: 'POST',
                            beforeSend: function (request) {
                                request.setRequestHeader("Authorization", token.gettoken());
                            },
                            data: { id: obj.data.ID },
                            success: function (res) {
                                layer.close(index);
                                if (res) {
                                    if (res.IsError == 0) {
                                        layer.msg("删除成功");
                                        utable.reload();
                                    } else {
                                        layer.msg("添加失败:" + res.ErrorMessage);
                                    }
                                }
                            }
                        });
                    });
                },
                edit: function (obj) {
                    layer.open({
                        type: 2 //此处以iframe举例
                        , skin: 'demo-class'
                        , title: '修改用户'
                        , area: ['1000px', '800px']
                        , shade: 0
                        , maxmin: true

                        , content: '/Member/Create'
                        , btn: ['关闭']
                        , yes: function () {
                            layer.closeAll();
                        }
                        , resize: true

                        , zIndex: layer.zIndex //重点1
                        , success: function (layero) {
                            layer.setTop(layero); //重点2
                        }
                    });
                },
                detail: function (obj) {
                    layer.msg('查看操作:' + obj.data.UserName);
                }
            };

            /*监听复选框*/
            table.on('checkbox(myfilter)', function (obj) {
                var checkStatus = table.checkStatus('datatable'); //datatable即为基础参数id对应的值
                //layer.msg(obj.data ? obj.data.ID : checkStatus);
            });
            /*监听工具条*/
            table.on('tool(myfilter)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值
                active[layEvent] ? active[layEvent].call(this, obj) : '';
            });
            /*监听排序*/
            table.on('sort(myfilter)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                if (!obj.type) { obj.type = "desc"; }
                table.reload('datatable', {
                    initSort: obj //记录初始排序，如果不设的话，将无法标记表头的排序状态。
                    , where: { //请求参数
                        orderby: obj.field + " " + obj.type  //排序字段
                    }
                });
            });

            /*自定义模版事件*/
            var getTpl = $('#addusers').html(); //模版内容
            var view = $('#view');  //渲染容器
            var data = {};  //渲染数据
            laytpl(getTpl).render(data, function (html) {
                view.html(html);
            });
            $(view).find("a[lay-event]").each(function (index, elem) {
                var type = $(elem).attr('lay-event'); //事件类型
                $(this).unbind("click").click(function () {
                    active[type] ? active[type].call($(elem)) : '';
                });
            });

        });
    </script>
}